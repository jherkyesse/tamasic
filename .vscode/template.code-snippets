{
  "Import React dependencies": {
    "prefix": "ipreact",
    "body": "import React, { useState, useEffect, useRef } from 'react';"
  },
  "New functional programming React.Component": {
    "prefix": "fnc",
    "body": [
      "import React, { useState, useEffect, useRef } from 'react';",
      "import PropTypes from 'prop-types';",
      "import { Checkbox, Col, Dropdown, Flex, Input, Modal, Row, Title } from 'components';",
      "",
      "const $1 = ({ $2, $3 }) => {",
      "  return (",
      "    <>",
      "    ",
      "  );",
      "}",
      "",
      "$1.propTypes = {",
      "  $2: PropTypes.string,",
      "  $3: PropTypes.string,",
      "}l",
      "",
      "$1.defaultProps = {",
      "  $2: '',",
      "  $3: '',",
      "};",
      "",
      "export default $1;",
      ""
    ]
  },
  "Import Utils/helpers": {
    "prefix": "iphelpers",
    "body": "import { $1 } from 'utils/helpers';"
  },
  "Import \"prop-types\"": {
    "prefix": "ipproptypes",
    "body": "import PropTypes from 'prop-types';"
  },
  "Import \"useDispatch\", \"useSelector\" from \"react-redux\"": {
    "prefix": "ipuseselector",
    "body": "import { useDispatch, useSelector } from 'react-redux';"
  },
  "Declare \"useDispatch\", \"useSelector\"": {
    "prefix": "useselector",
    "body": [
      "const $1 = useSelector((state) => state.$2.$1);",
      "const dispatch = useDispatch();"
    ]
  },
  "Import \"useRedux\"": {
    "prefix": "ipuseredux",
    "body": "import useRedux from 'hooks/useRedux';"
  },
  "Declare \"useRedux\"": {
    "prefix": "useredux",
    "body": "const { dispatch, select } = useRedux();"
  },
  "Declare \"select\"": {
    "prefix": "select",
    "body": "const $1 = select((state) => state.$2.$1);"
  },
  "Try Catch scope": {
    "prefix": "try",
    "body": [
      "try {",
      "  $1",
      "} catch (error) {",
      "  console.warn(error);",
      "}"
    ]
  }
}
